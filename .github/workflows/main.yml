name: main branch CI/CD

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  tests: 
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    permissions:
      contents: write

    env:
      DATABASE_URL: "postgresql+psycopg2://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@${{ secrets.HOST }}:5432/arosaje"
      ALGORITHM: ${{ secrets.ALGORITHM }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Linter backend
      working-directory: ./backend
      run: |
        python -m pylint app/ tests/ --exit-zero --output-format=colorized

    - name: Run Pytest
      working-directory: ./backend
      run: |
        python -m pytest --color=yes

    - name: Run coverage
      working-directory: ./backend
      run: |
        coverage run -m pytest --color=yes
        coverage report

    - name: Install dependencies frontend
      working-directory: ./frontend
      run: |
        npm install

    - name: Linter frontend
      working-directory: ./frontend
      run: |
        npm run lint

  release-tag:
    runs-on: ubuntu-latest
    needs: tests

    steps:
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Create a GitHub release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.tag_version.outputs.new_tag }}
        name: Release ${{ steps.tag_version.outputs.new_tag }}
        body: ${{ steps.tag_version.outputs.changelog }}

  deploy:
    runs-on: ubuntu-latest
    needs: release-tag

    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

    steps:
    - name: Deploy to Server via SSH action
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.HOST_USER }}
        key: ${{ secrets.HOST_PASSWORD }}
        port: 22
        script: |
          # Stop all running Docker Containers
          # if [ "$(docker ps -a -q)" ]; then
          #   docker kill $(docker ps -a -q)
          #   docker rm $(docker ps -a -q)
          # fi

          cd epsi_b3_mspr_infra
          git pull
          sudo docker compose up -d --build